#!/usr/bin/env python

from __future__ import absolute_import, division, print_function, unicode_literals

import sys, os, platform
import subprocess
import functools


# Easy on the wrists
def run(cmd, cwd=None):
    return subprocess.check_call(cmd, cwd=cwd, shell=True)


def read_text(file_path):
    with open(file_path, "r") as f:
        return f.read()


def message(msg):
    print(msg)
    with open(summary_file, "a+") as f:
        f.write(msg)


#reset summary file
user_home = os.getenv("HOME")
summary_file = os.path.join(user_home, "stackful-node-summary.txt")
run("rm -f '{}'".format(summary_file))

# reset stack configuration
config_dir = os.path.join("/etc", "stackful")
run("mkdir -p '{}'".format(config_dir))
config_file = os.path.join(config_dir, "stackful-node.json")
run("rm -f '{}'".format(config_file))

message("Checking if OS/Distro is supported...")
distro, version, _ = platform.dist()
if distro != "Ubuntu" or version != "12.04":
    message("Unsupported OS/distro. Supported: Ubuntu 12.04")
    sys.exit(255)

message("Installing prerequisite packages...")
run("DEBIAN_FRONTEND=noninteractive apt-get update --yes")
run("DEBIAN_FRONTEND=noninteractive apt-get install --yes dialog git")

stack_repo = "https://github.com/stackful/stackful-node.git"
stack_source = "/tmp/stackful-node"

message("Fetching stack files from {} ...".format(stack_repo))
run("rm -rf '{}'".format(stack_source))
run("git clone '{repo}' '{dir}'".format(repo=stack_repo, dir=stack_source))

run_stack = functools.partial(run, cwd=stack_source)
run_stack("git submodule update --init")

message("Setting up Git deploy user...")
run_stack("./bootstrap/install-git-repo")


message("Installing Opscode Chef...")
run("curl -L https://www.opscode.com/chef/install.sh | bash")

message("Finishing stack installation...")
run_stack("./run")

print("INSTALLATION SUMMARY (also saved to ~/stackful-node-summary.txt):\n")
run("cat ~/stackful-node-summary.txt")
