#!/usr/bin/env python
from __future__ import absolute_import, division, print_function, unicode_literals
import os
import subprocess
import json
import pwd

script_dir = os.path.dirname(os.path.abspath(__file__))
config_file = os.path.join("/etc", "stackful", "stackful-node.json")
try:
    with open(config_file, "r") as cf:
        config = json.load(cf)
except IOError:
    config = {}

# Go on with Git deployment
git_user, git_password, git_key = config.get("deploy_user", ""), "", config.get("deploy_key", "")

user_exists = False
try:
    pwd.getpwnam(git_user)
    user_exists = True
except KeyError:
    pass

if not user_exists:
    create_user_cmd = 'useradd --create-home --shell=/bin/bash {user}'.format(user=git_user)
    subprocess.check_call(create_user_cmd, shell=True)

ssh_auth_commands = """
mkdir -p {home}/.ssh
chmod 700 {home}/.ssh
echo "{key}" > {home}/.ssh/authorized_keys
chmod 600 {home}/.ssh/authorized_keys
""".format(key=git_key, home=os.path.join("/home", git_user))

git_user_shell = subprocess.Popen("sudo -u {} sh".format(git_user), stdin=subprocess.PIPE, shell=True)
git_user_shell.stdin.write(ssh_auth_commands)
git_user_shell.stdin.close()
git_user_shell.communicate()

config["deploy_user"] = git_user
config["deploy_key"] = git_key

with open(config_file, "w") as cf:
    cf.write(json.dumps(config, indent=True))
